/*
 * Copyright (C) 2022 PixieBrix, Inc.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

import { IBrick } from "@/core";

export const Tag = {
  ALL: "All Categories",
  EXTRACT: "Extract",
  COLLECT: "Collect Input",
  AUTOMATE: "Automate",
  TRANSFORM: "Transform Data",
  INTEGRATE: "Integrate",
  COLLABORATE: "Collaborate",
  STORE: "Store/Retrieve",
  MODIFY: "Modify Page",
  SHOW: "Show/Display",
};

const taggedBrickIds = {
  [Tag.EXTRACT]: new Set([
    "html/data-attr",
    "cbssports/fantasy-player-reader",
    "apartments.com/property-reader",
    "linkedin/contact-info",
    "linkedin/organization-summary",
    "linkedin/person-summary",
    "redfin/property",
    "trello/card",
    "zillow/property",
    "@pixiebrix/forms/data",
    "@pixiebrix/dom/detect",
    "@pixiebrix/jquery-reader",
    "@pixiebrix/component-reader",
    "@pixiebrix/table-reader",
    "@pixiebrix/table-reader-all",
    "@pixiebrix/browser/screenshot",
    "@pixiebrix/document-context",
    "@pixiebrix/chrome-extension-manifest",
    "@pixiebrix/document-metadata",
    "@pixiebrix/document-semantic",
    "@pixiebrix/image",
    "@pixiebrix/image/exif",
    "@pixiebrix/html/element",
    "@pixiebrix/html/read",
    "@pixiebrix/selection",
    "pipedrive/organization",
    "pipedrive/person",
    "pipedrive/deal",
  ]),
  [Tag.COLLECT]: new Set([
    "notes/simple",
    "notes/simple-modal",
    "@todd/file/simple-upload",
    "@pixies/trello/trellocardmakerprompt",
    "@pixies/jira/jiraissuemakerprompt",
    "@pixiebrix/prompt",
    "@pixiebrix/form-modal",
    "@pixiebrix/form",
  ]),
  [Tag.AUTOMATE]: new Set([
    "google/maps-directions",
    "crunchbase/search",
    "npmjs/search",
    "indeed/search",
    "ladders/search",
    "stackoverflow/search",
    "@pixies/uipath/queue-items",
    "spotify/search",
    "@jl/wayfair/search",
    "@jl/costco/search",
    "@jl/bestbuy/search",
    "@jl/lowes/search",
    "@jl/homedepot/search",
    "@jl/target/search",
    "pandora/search",
    "@pixies/walmart/search",
    "forvo/search",
    "@pixies/homedepot/search",
    "pixiebrix/search",
    "google/search-maps",
    "boardgamegeek/search",
    "pypi/search",
    "docker/search",
    "fontawesome/search",
    "artifacthub/search",
    "dash/search",
    "bbb/search",
    "email/create-message",
    "@pixies/twitter/tweet",
    "@shanepatel/aari-process-list",
    "amazon/search",
    "dnb/search",
    "drafts/append",
    "drafts/create",
    "drafts/prepend",
    "drafts/quick-search",
    "drafts/search",
    "duckduckgo/search",
    "ebay/search",
    "etsy/search",
    "facebook/search",
    "github/search",
    "google/search",
    "imdb/search",
    "linkedin/search",
    "omnifocus/add",
    "omnifocus/perspective",
    "omnifocus/view",
    "@pixiebrix/automation-anywhere/aari-request-create",
    "@pixiebrix/automation-anywhere/aari-request-new",
    "@pixiebrix/automation-anywhere/aari-requests-list",
    "@pixiebrix/automation-anywhere/aari-tasks-list",
    "@pixiebrix/uipath/add-queue-item",
    "quora/search",
    "reddit/search",
    "rottentomatoes/search",
    "soundcloud/search",
    "twitter/search",
    "wikipedia/search",
    "yelp/search",
    "youtube/search",
    "@pixiebrix/http",
    "@pixiebrix/dom/detect",
    "@pixiebrix/template",
    "@pixiebrix/browser/open-tab",
    "@pixiebrix/browser/location",
    "@pixiebrix/clipboard/copy",
    "@pixiebrix/form-fill",
    "@pixiebrix/forms/set",
    "@pixiebrix/browser/close-tab",
    "@pixiebrix/browser/activate-tab",
    "@pixiebrix/vue/set-values",
    "@pixiebrix/dom/trigger-event",
    "@pixiebrix/wait/sleep",
    "@pixiebrix/wait/element",
    "@pixiebrix/sidebar/hide",
    "@pixiebrix/sidebar/show",
    "@pixiebrix/cancel",
    "@pixiebrix/forms/autocomplete",
    "@pixiebrix/reactivate",
    "@pixiebrix/uipath/process",
    "@pixiebrix/uipath/app",
    "@pixiebrix/uipath/local-process",
    "@pixiebrix/zapier/push-data",
    "@pixiebrix/automation-anywhere/run-bot",
  ]),
  [Tag.TRANSFORM]: new Set([
    "states/abbrev-to-name",
    "states/name-to-abbrev",
    "exchangerate-api.com/convert",
    "google/translate",
    "@armhanson/google-translate20.com/translate",
    "@jl/mailboxvalidator/mailbox-validator-api",
    "@jl/urlshortener/custom-url-shortener-api",
    "@pixiebrix/jq",
    "@pixiebrix/parse/json",
    "@pixiebrix/jsonpath",
    "@pixiebrix/regex",
    "@pixiebrix/mapping",
    "@pixiebrix/parse-url",
    "@pixiebrix/encode/btoa",
    "@pixiebrix/encode/atob",
    "@pixiebrix/url-params",
    "@pixiebrix/parse/csv",
    "@pixiebrix/data-url",
    "@pixiebrix/parse-date",
    "@pixiebrix/export/csv",
    "@pixiebrix/timestamp",
  ]),
  [Tag.INTEGRATE]: new Set([
    "google/knowledge-graph-api",
    "hunter.io/email-finder",
    "hunter.io/domain-search",
    "exchangerate-api.com/convert",
    "google/translate",
    "coinlayer.com/live",
    "exchange-rates",
    "@pixies/trello/gettrellousername",
    "monicahq/search-contacts",
    "monicahq/contacts-create",
    "exchangerate-api.com/rates",
    "@jl/mailboxvalidator/mailbox-validator-api",
    "@pixies/jira/jirachooseproject",
    "@pixies/uipath/queue-items",
    "@pixies/asana/getprojects",
    "@pixies/asana/asanataskmakerprompt",
    "@pixies/trello/trellochooseboard",
    "@pixies/trello/trellocardmakerprompt",
    "@pixies/slack/get-user-by-email",
    "@pixies/msteams/sendtomsteamssimple",
    "@pixies/msteams/sendtomsteamscard",
    "@pixies/jira/issues-create",
    "@pixies/slack/get-users",
    "@pixies/slack/get-channels",
    "@pixies/slack/simple-message",
    "@shanepatel/aari-process-list",
    "drafts/append",
    "drafts/create",
    "drafts/prepend",
    "drafts/quick-search",
    "drafts/search",
    "hubspot/contact-search",
    "hubspot/contact-timeline",
    "omnifocus/add",
    "omnifocus/perspective",
    "omnifocus/view",
    "@pixiebrix/automation-anywhere/aari-request-create",
    "@pixiebrix/automation-anywhere/aari-request-new",
    "@pixiebrix/automation-anywhere/aari-requests-list",
    "@pixiebrix/automation-anywhere/aari-tasks-list",
    "@pixiebrix/data/get",
    "@pixiebrix/data/put",
    "@pixiebrix/datarobot/predictions",
    "@pixiebrix/uipath/add-queue-item",
    "@pixies/jira/jiraissuemakerprompt",
    "@pixies/slack/advanced-message",
    "@pixies/trello/get-lists",
    "@pixies/trello/new-card",
    "@pixies/trello/get-cards",
    "@pixiebrix/get",
    "@pixiebrix/http",
    "@pixiebrix/telemetry",
    "@pixiebrix/profile",
    "@pixiebrix/session",
    "@pixiebrix/google/bigquery-query",
    "@pixiebrix/google/sheets-append",
    "@pixiebrix/google/sheets-lookup",
    "google/geocode",
    "hubspot/create-update-contact",
    "hubspot/create-update-company",
    "pipedrive/organizations-add",
    "pipedrive/persons-add",
    "pipedrive/persons-search",
    "salesforce/leads-create",
    "@pixiebrix/uipath/process",
    "@pixiebrix/uipath/app",
    "@pixiebrix/uipath/local-process",
    "@pixiebrix/zapier/push-data",
    "@pixiebrix/automation-anywhere/run-bot",
  ]),
  [Tag.COLLABORATE]: new Set([
    "monicahq/search-contacts",
    "monicahq/contacts-create",
    "@pixies/jira/jirachooseproject",
    "@pixies/asana/getprojects",
    "@pixies/asana/asanataskmakerprompt",
    "@pixies/trello/trellochooseboard",
    "@pixies/trello/trellocardmakerprompt",
    "email/create-message",
    "@pixies/slack/get-user-by-email",
    "@pixies/msteams/sendtomsteamssimple",
    "@pixies/msteams/sendtomsteamscard",
    "@pixies/jira/issues-create",
    "@pixies/slack/get-users",
    "@pixies/slack/get-channels",
    "@pixies/slack/simple-message",
    "@pixiebrix/deployments/message",
    "@pixiebrix/queue/assign",
    "@pixies/jira/jiraissuemakerprompt",
    "@pixies/slack/advanced-message",
    "hubspot/create-update-contact",
    "hubspot/create-update-company",
    "pipedrive/organizations-add",
    "pipedrive/persons-add",
    "pipedrive/persons-search",
    "pipedrive/organization",
    "pipedrive/person",
    "pipedrive/deal",
    "salesforce/leads-create",
  ]),
  [Tag.STORE]: new Set([
    "@pixiebrix/data/get",
    "@pixiebrix/data/put",
    "@pixiebrix/clipboard/copy",
    "@pixiebrix/state/get",
    "@pixiebrix/state/set",
    "@pixiebrix/export/csv",
    "@pixiebrix/google/bigquery-query",
    "@pixiebrix/google/sheets-append",
    "@pixiebrix/google/sheets-lookup",
  ]),
  [Tag.MODIFY]: new Set([
    "@pixiebrix/template",
    "@pixiebrix/form-fill",
    "@pixiebrix/forms/set",
    "@pixiebrix/highlight",
    "@pixiebrix/vue/set-values",
    "@pixiebrix/dom/trigger-event",
    "@pixiebrix/hide",
    "@pixiebrix/show",
    "@pixiebrix/tour",
    "@pixiebrix/forms/autocomplete",
    "@pixiebrix/enable",
    "@pixiebrix/disable",
  ]),
  [Tag.SHOW]: new Set([
    "notes/simple",
    "diwhy/rick-astley",
    "notes/simple-modal",
    "@pixies/microsoft/powerbi-embed",
    "google/scholar-table",
    "hackernews/article-table",
    "hubspot/contact-timeline",
    "nytimes/organization-articles",
    "pipedrive/person-activity",
    "youtube/video",
    "@pixiebrix/form-modal",
    "@pixiebrix/browser/log",
    "@pixiebrix/browser/alert",
    "@pixiebrix/hide",
    "@pixiebrix/sidebar/hide",
    "@pixiebrix/sidebar/show",
    "@pixiebrix/error",
    "@pixiebrix/show",
    "@pixiebrix/confetti",
    "@pixiebrix/tour",
    "@pixiebrix/audio",
    "@pixiebrix/html",
    "@pixiebrix/iframe",
    "@pixiebrix/markdown",
    "@pixiebrix/property-table",
    "@pixiebrix/form",
    "@pixiebrix/table",
    "@pixiebrix/document",
  ]),
};

export function brickHasTag(brick: IBrick, tag: string | null): boolean {
  if (tag == null || tag === Tag.ALL) {
    return true;
  }

  // eslint-disable-next-line security/detect-object-injection
  return taggedBrickIds[tag].has(brick.id);
}

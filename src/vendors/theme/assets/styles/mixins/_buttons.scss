@mixin button-variant($color-name, $color-variable) {
  background-color: var($color-variable);
  border-color: var($color-variable);
  color: color-contrast($color-name);

  &:hover {
    background-color: #{"hsl(var(--theme-#{$color-name}-hs), calc(var(--theme-#{$color-name}-l) - 7.5%))"};
    border-color: #{"hsl(var(--theme-#{$color-name}-hs), calc(var(--theme-#{$color-name}-l) - 10%))"};
    color: color-contrast($color-name, 7.5%);
  }

  &:focus,
  &.focus {
    color: color-contrast($color-name, 7.5%);
    background-color: #{"hsl(var(--theme-#{$color-name}-hs), calc(var(--theme-#{$color-name}-l) - 7.5%))"};
    border-color: #{"hsl(var(--theme-#{$color-name}-hs), calc(var(--theme-#{$color-name}-l) - 10%))"};
    box-shadow: 0 0 0 $btn-focus-width #{"hsla(var(--theme-#{$color-name}-hs), var(--theme-#{$color-name}-l), .5)"};
  }

  &.disabled,
  &:disabled {
    background-color: var($color-variable);
    border-color: var($color-variable);
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    // TODO: implement high contrast yiq equivalent for hsl colors
    // color: color-yiq($color-name);
    background-color: #{"hsl(var(--theme-#{$color-name}-hs), calc(var(--theme-#{$color-name}-l) - 10%))"};
    border-color: #{"hsl(var(--theme-#{$color-name}-hs), calc(var(--theme-#{$color-name}-l) - 10%))"};

    &:focus {
      box-shadow: 0 0 0 $btn-focus-width #{"hsla(var(--theme-#{$color-name}-hs), var(--theme-#{$color-name}-l), .5)"};
    }
  }
}

@mixin button-outline-variant($color-name, $color-variable) {
  color: var($color-variable);
  border-color: var($color-variable);

  @include hover() {
    color: white;
    // TODO: implement high contrast yiq equivalent for hsl colors
    // color: color-yiq($color-name);
    background-color: var($color-variable);
    border-color: var($color-variable);
  }

  &:focus,
  &.focus {
    box-shadow: 0 0 0 $btn-focus-width #{"hsla(var(--theme-#{$color-name}-hs), var(--theme-#{$color-name}-l), .5)"};
  }

  &.disabled,
  &:disabled {
    color: var($color-variable);
    background-color: transparent;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    // TODO: implement high contrast yiq equivalent for hsl colors
    // color: color-yiq($color-name);
    background-color: var($color-variable);
    border-color: var($color-variable);

    &:focus {
      box-shadow: 0 0 0 $btn-focus-width #{"hsla(var(--theme-#{$color-name}-hs), var(--theme-#{$color-name}-l), .5)"};
    }
  }
}

@mixin social-button($color) {
  background: $color;
  color: $white;

  &:hover,
  &:focus {
    background: darken($color, 10%);
    color: $white;
  }
  &.btn-social-icon-text {
    padding: 0 1.5rem 0 0;
    background: lighten($color, 10%);
    i {
      background: $color;
      padding: 0.75rem;
      display: inline-block;
      margin-right: 1.5rem;
    }
  }
}
@mixin social-outline-button($color) {
  border: 1px solid $color;
  color: $color;
  &:hover {
    background: $color;
    color: $white;
  }
}
@mixin button-inverse-variant($color, $color-hover: $white) {
  background-color: rgba($color, 0.2);
  background-image: none;
  border-color: rgba($color, 0);
  &:not(.btn-inverse-light) {
    color: $color;
  }
  @include hover {
    color: $color-hover;
    background-color: $color;
    border-color: $color;
  }

  &.focus,
  &:focus {
    box-shadow: 0 0 0 3px rgba($color, 0.5);
  }

  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
  }

  &.active,
  &:active,
  .show > &.dropdown-toggle {
    color: $color-hover;
    background-color: $color;
    border-color: $color;
  }
}
@mixin button-gradient-variant($value) {
  background: $value;
  border: 0;
  &:not([disabled]):not(.disabled):active,
  &:not([disabled]):not(.disabled).active,
  .show > &.dropdown-toggle {
    background: $value;
  }
  &:hover {
    opacity: 0.8;
  }
  &:not(.btn-gradient-light) {
    color: $white;
    &:hover,
    &:focus,
    &:active {
      color: $white;
    }
  }
  @include transition(opacity 0.3s ease);
}

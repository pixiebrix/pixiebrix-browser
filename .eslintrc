{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint", "security", "unicorn"],
  "env": {
    "browser": true
  },
  "parserOptions": {
    "project": "tsconfig.json"
  },
  "settings": {
    "import/resolver": {
      "webpack": {
        "config": "./browsers/resolve.config.js"
      }
    },
    "import/ignore": [
      "react-select" // For some reason it points to a flow JS file
    ],
    "react": {
      "version": "detect"
    }
  },
  "extends": [
    // TODO: replace the following 3 with the stricter xo-typescript config
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",

    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:security/recommended",
    "plugin:unicorn/recommended"
  ],
  "rules": {
    // Enable a few more rules
    "no-lonely-if": "error",
    "no-else-return": "error",
    "no-negated-condition": "warn",
    "no-useless-return": "error",

    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "vars": "all",
        "args": "after-used",
        "ignoreRestSiblings": true,
        "argsIgnorePattern": "^_",
        "caughtErrors": "all",
        "caughtErrorsIgnorePattern": "^_$"
      }
    ],
    "@typescript-eslint/ban-ts-comment": [
      "error",
      {
        "ts-ignore": "allow-with-description",
        "minimumDescriptionLength": 3
      }
    ],

    "import/no-unresolved": [
      "error",
      {
        "ignore": [
          "json-schema" // @types-only package
        ]
      }
    ],
    "unicorn/prevent-abbreviations": [
      "error",
      {
        "extendDefaultReplacements": false,
        "replacements": {
          "err": {
            "error": true
          }
        }
      }
    ],

    // Soft-enable some rules, maybe enforce them later
    "@typescript-eslint/ban-types": "warn",
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/promise-function-async": "warn",
    "unicorn/no-array-callback-reference": "warn", // Buggy with jQuery
    "unicorn/no-useless-undefined": "warn", // Buggy with React
    "unicorn/no-nested-ternary": "warn", // Sometimes it conflicts with Prettier
    "unicorn/consistent-function-scoping": "warn", // Complains about some of the lifted functions
    "unicorn/prefer-prototype-methods": "warn", // Buggy with abstract classes
    "unicorn/prefer-switch": "warn",

    // Config copied from https://github.com/xojs/eslint-config-xo-typescript/blob/7842d05deaadff1ced9a46f3e56d786e7b2922d2/index.js#L306
    "@typescript-eslint/no-floating-promises": [
      "warn",
      {
        "ignoreVoid": true, // Prepend a function call with `void` to mark it as not needing to be await'ed, which silences this rule.
        "ignoreIIFE": true
      }
    ],

    // Disable recommended rules
    "@typescript-eslint/no-empty-function": "off",
    "import/named": "off", // TypeScript does this natively
    "react/prop-types": "off",
    "unicorn/no-null": "off", // Maybe later
    "unicorn/filename-case": "off", // Contrasts with React
    "unicorn/prefer-node-protocol": "off", // Not fully supported by TS
    "unicorn/prefer-set-has": "off", // Not always worth the extra code
    "unicorn/prefer-ternary": "off", // Maybe later
    "unicorn/require-post-message-target-origin": "off" // Incompatible https://github.com/sindresorhus/eslint-plugin-unicorn/issues/1396
  },
  "ignorePatterns": [
    "node_modules",
    ".idea",
    "browsers/dist",
    "artifacts",
    "scripts/bin",
    "src/vendors",
    "src/nativeEditor/Overlay.tsx",
    "src/support.js"
  ],
  "overrides": [
    {
      "files": [
        "webpack.*.js",
        "*.config.js",
        "test-env.js",
        "**/__mocks__/**",
        "*.test.js"
      ],
      "env": {
        "node": true,
        "jest": true
      },
      "rules": {
        "@typescript-eslint/no-var-requires": "off",
        "unicorn/prefer-module": "off",

        // the webpack/testing files only run on the CI server, so don't need to watch for these:
        "security/detect-object-injection": "off",
        "security/detect-child-process": "off",
        "security/detect-unsafe-regex": "off"
      }
    }
  ]
}

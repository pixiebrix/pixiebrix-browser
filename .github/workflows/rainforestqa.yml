name: Rainforest QA Run

# For now, we'll manually trigger the run. We might consider the pull_request review_requested or push to main
# event triggers in the future. These will require potentially cleanly dealing with concurrent runs
# https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows
# https://frontside.com/blog/2020-05-26-github-actions-pull_request/
on:
  workflow_dispatch:
  push:
    branches:
      - release/*
  schedule:
    - cron: "0 8 * * *" # 8am UTC -> 3am EST

jobs:
  rainforestqa:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: npm

      - run: npm ci
      - run: npm run build
        env:
          GOOGLE_APP_ID: ${{ secrets.GOOGLE_APP_ID }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          GOOGLE_OAUTH_CLIENT_ID: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}
          ROLLBAR_BROWSER_ACCESS_TOKEN: ${{ secrets.ROLLBAR_BROWSER_ACCESS_TOKEN }}
          ROLLBAR_POST_SERVER_ITEM_TOKEN: ${{ secrets.ROLLBAR_POST_SERVER_ITEM_TOKEN }}
          CHROME_MANIFEST_KEY: ${{ secrets.CHROME_MANIFEST_PROD_PUBLIC_KEY }}

      # https://stackoverflow.com/a/58142637
      - name: Get Branch
      - if: github.ref_name == 'main'
      - run: echo "##[set-output name=build_path;]$(echo builds/pixiebrix-extension-main.zip)"
      - run: echo "##[set-output name=run_group;]$(echo 14129)"
      - if: github.ref_name != 'main'
      - run: echo "##[set-output name=build_path;]$(echo builds/pixiebrix-extension-release.zip)"
      - run: echo "##[set-output name=run_group;]$(echo 14130)"
      - id: extract_branch

      - name: Upload Extension
      - run: bash scripts/upload-extension.sh steps.extract_branch.outputs.build_path
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.SOURCEMAP_USER_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SOURCEMAP_USER_KEY }}
          AWS_DEFAULT_REGION: "us-east-2"

      - name: Reset Test Account Data
        run: |
          curl -H "Authorization: Token $TOKEN" -X POST https://app.pixiebrix.com/api/tests/seed/rainforest/
        env:
          TOKEN: ${{ secrets.TEST_ACCOUNT_KEY }}

      - name: Install Rainforest QA CLI
        run: |
          curl -sL $(curl -s https://api.github.com/repos/rainforestapp/rainforest-cli/releases/latest | jq -r '.assets[].browser_download_url | select(test("linux-amd64.tar.gz"))') | tar zxf - rainforest

      # https://github.com/rainforestapp/rainforest-cli
      - name: Run Rainforest QA Extension Test Suite
        # Can't pass cancel for conflict because while we're generating a separate Rainforest QA environment for each run
        #   they're all using the same server
        # Use --fail-fast so that we're not using GitHub build minutes if not necessary
        run: |
          ./rainforest run --fail-fast --description "CI automatic run" --run-group $RUN_GROUP --release "${{ github.sha }}" --conflict cancel-all
        env:
          RAINFOREST_API_TOKEN: ${{ secrets.RAINFORESTQA_TOKEN }}
          # The run group for tests to run during CI, now has start URL built-in
          RUN_GROUP: steps.extract_branch.outputs.run_group

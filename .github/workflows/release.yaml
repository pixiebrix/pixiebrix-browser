name: Release Build

on:
  push:
    branches:
      - "release/**"

env:
  # Creates and uploads sourcemaps to Rollbar, and save the built extension as an artifact
  PUBLIC_RELEASE: true

jobs:
  build:
    runs-on: ubuntu-latest

    # Docs https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs#expanding-or-adding-matrix-configurations
    strategy:
      matrix:
        INSTALL_TYPE:
          - for-store
          - production
        include:
          - MV: 2
            PUBLIC_NAME: ""
            CHROME_MANIFEST_KEY: ${{ secrets.CHROME_MANIFEST_PROD_PUBLIC_KEY }}
          - MV: 3
            PUBLIC_NAME: "-mv3"
            CHROME_MANIFEST_KEY: ${{ secrets.CHROME_MANIFEST_PROD_PUBLIC_KEY }}

    name: build-${{ matrix.INSTALL_TYPE }}${{ matrix.PUBLIC_NAME }}
    env:
      SOURCE_MAP_URL_BASE: https://pixiebrix-extension-source-maps.s3.amazonaws.com
      SOURCE_MAP_PATH: sourcemaps/${{ github.job }}/${{ github.sha }}/mv${{ matrix.MV }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: npm
      - run: npm ci
      - run: npm run build
        env:
          MV: ${{ matrix.MV }}
          ROLLBAR_BROWSER_ACCESS_TOKEN: ${{ secrets.ROLLBAR_BROWSER_ACCESS_TOKEN }}
          ROLLBAR_POST_SERVER_ITEM_TOKEN: ${{ secrets.ROLLBAR_POST_SERVER_ITEM_TOKEN }}
          DATADOG_APPLICATION_ID: ${{ secrets.DATADOG_APPLICATION_ID }}
          DATADOG_CLIENT_TOKEN: ${{ secrets.DATADOG_CLIENT_TOKEN }}

          # Not included in the build for the store
          CHROME_MANIFEST_KEY: ${{ matrix.INSTALL_TYPE == 'production' && matrix.CHROME_MANIFEST_KEY }}
      - run: bash scripts/upload-sourcemaps.sh
        if: matrix.INSTALL_TYPE == 'for-store'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.SOURCEMAP_USER_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SOURCEMAP_USER_KEY }}
          AWS_DEFAULT_REGION: "us-east-2"
          ROLLBAR_POST_SERVER_ITEM_TOKEN: ${{ secrets.ROLLBAR_POST_SERVER_ITEM_TOKEN }}
      - name: Save extension
        uses: actions/upload-artifact@v4
        with:
          name: build-${{matrix.INSTALL_TYPE}}${{ matrix.PUBLIC_NAME }}
          path: |
            dist
            !dist/**/*.map
          retention-days: 30
          if-no-files-found: error
      - name: Slack Notification
        if: matrix.INSTALL_TYPE == 'for-store' && matrix.MV == 2
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: "release-notifications"
          SLACK_MESSAGE: "Chrome release build succeeded :rocket:"
